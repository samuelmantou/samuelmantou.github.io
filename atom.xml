<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[高超的技术博客]]></title>
  <link href="http://samuelmantou.github.io/atom.xml" rel="self"/>
  <link href="http://samuelmantou.github.io/"/>
  <updated>2014-03-23T23:30:03+08:00</updated>
  <id>http://samuelmantou.github.io/</id>
  <author>
    <name><![CDATA[高超]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Data Type and Model of C]]></title>
    <link href="http://samuelmantou.github.io/blog/2014/03/23/data-type-and-model-of-c/"/>
    <updated>2014-03-23T22:38:35+08:00</updated>
    <id>http://samuelmantou.github.io/blog/2014/03/23/data-type-and-model-of-c</id>
    <content type="html"><![CDATA[<h1>C的数据类型和模型 &mdash; 《征服C指针》</h1>

<p>这章没怎么看懂，所以打算写篇博客，可能有错误，但我会不停修正的。</p>

<blockquote><p>假设有下面这样的声明：
<code>int (*func_table[10])(int a);</code>可以解释成:指向返回int的函数（参数为int a）的指针的数组（元素个数10）</p></blockquote>

<p><img src="http://samuelmantou.github.io/images/keyChainOfType.jpg" alt="image" /></p>

<center>图 3-1 用图表现“类型”</center>


<p>这种表示“类型链的表示”。</p>

<p>姑且先<b>忽视结构体、共用体、typedef等类型，</b>概要地进行说明，链的最后面的元素是<b>基本类型,</b>这里可能是int或者double。</p>

<p>此外，从倒数的第二个元素开始的元素都是<b>派生类型。</b>所谓“派生类型”，就是指从某些类型派生出来的类型。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello My Github Blog]]></title>
    <link href="http://samuelmantou.github.io/blog/2014/03/20/Hello-My-Github-Blog/"/>
    <updated>2014-03-20T22:22:34+08:00</updated>
    <id>http://samuelmantou.github.io/blog/2014/03/20/Hello-My-Github-Blog</id>
    <content type="html"><![CDATA[<h1>昨晚脑袋有点累，就弄了一个Github的博客。</h1>

<p>最近主要是想要攻下《征服C指针》</p>

<p><img src="http://samuelmantou.github.io/images/C_image.jpg" alt="image" /></p>

<p>下面试试写一行代码看看,哈哈</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">AFHTTPRequestOperationManager</span> <span class="o">*</span><span class="n">manager</span> <span class="o">=</span> <span class="p">[</span><span class="n">AFHTTPRequestOperationManager</span> <span class="n">manager</span><span class="p">];</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">parameters</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;foo&quot;</span><span class="o">:</span> <span class="s">@&quot;bar&quot;</span><span class="p">};</span>
</span><span class='line'><span class="p">[</span><span class="n">manager</span> <span class="nl">POST:</span><span class="s">@&quot;http://example.com/resources.json&quot;</span> <span class="nl">parameters:</span><span class="n">parameters</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="kt">id</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;JSON: %@&quot;</span><span class="p">,</span> <span class="n">responseObject</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error: %@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<p>大部分都是向<a href="http://blog.devtang.com">唐巧</a>的博客里学的</p>

<p>下面是一段引用</p>

<blockquote><p>In programming languages, a closure is a function or reference to a function together with a referencing environment—a table storing a reference to each of the non-local variables (also called free variables or upvalues) of that function.</p></blockquote>
]]></content>
  </entry>
  
</feed>
